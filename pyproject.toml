[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kurai-sdk"
version = "1.0.0"
description = "Cliente oficial para la API pública de Lexia"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "Lexia Team", email = "dev@lexia.la"}
]
maintainers = [
    {name = "Lexia Team", email = "dev@lexia.la"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business",
    "Natural Language :: Spanish",
    "Natural Language :: English",
]
requires-python = ">=3.7"
dependencies = [
    "requests>=2.25.0",
]
keywords = [
    "lexia", "kurai", "api", "sdk", "client", "automation",
    "document-processing", "ai", "rpa", "workflow"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0", 
    "responses>=0.18.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.812",
    "twine>=3.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]
async = [
    "aiohttp>=3.7.0",
]

[project.urls]
"Homepage" = "https://lexia.la"
"Documentation" = "https://docs.lexia.la/sdk"
"Repository" = "https://github.com/lexia/kurai-sdk"
"Bug Reports" = "https://github.com/lexia/kurai-sdk/issues"
"Company" = "https://lexia.la"
"Support" = "https://support.lexia.la"

[project.scripts]
kurai = "kurai.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["kurai*"]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
kurai = ["*.json", "*.yaml", "*.txt"]

# Herramientas de desarrollo
[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kurai"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --tb=short"
testpaths = ["tests"]
markers = [
    "integration: marca tests de integración",
    "unit: marca tests unitarios",
]

[tool.coverage.run]
source = ["kurai"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]